
1. 新项目创建一个Project【接口测试管理】

2. 拷贝rbac app 到新项目中。

3. 删除rbac/migrations目录下的所有问题（除__init__.py除外）

4. 接口测试管理的表结构设计。

    - 用户表需要继承 rabc 中的用户表，例如：

        class UserInfo(AbstractUserInfo):
            """
            用户表
            """
            email = models.EmailField(verbose_name='邮箱')

    - settings中注册 app，例如：
        INSTALLED_APPS = [
            ...
            'api.apps.ApiConfig',
            'rbac.apps.RbacConfig',
        ]


    - 数据库迁移


5. 业务开发

    - 将模板中 【动态生成菜单】 【导航条】 功能去掉。
        {% get_menu request %}

        {% get_breadcrumb request %}

    - API开发
        - 保留原搜索条件
        - 分页
        - 编辑/删除/添加 模板页面的重用。
        - ModelForm 定制BootStrap样式
        - 错误信息中文显示
    - 用户管理
        ..

6. 使用 django admin进行权限信息的录入【权限信息】
    - 创建admin的超级用户
    - 权限分配
        - 菜单表
        - 权限表
        - 角色表
        - 权限角色关系表

7. 业务中添加用户管理【用户信息】
    - 用户增删改查
    - 用户和角色关系

    简单：admin



8. 用户登录
    - 视图函数示例：
        def login(request):
            if request.method == 'GET':
                return render(request, 'login.html')
            user = request.POST.get('username')
            pwd = request.POST.get('password')
            user_object = models.UserInfo.objects.filter(username=user, password=pwd).first()
            if not user_object:
                return render(request, 'login.html', {'error': '用户名或密码错误'})

            # 权限初始化
            init_permission(user_object,request)
            return redirect(reverse('index'))

    - HTML示例：
        <div style="width: 400px;margin: 0 auto;margin-top: 100px;">
            <form class="form-horizontal" method="post">
                {% csrf_token %}
                <div class="form-group">
                    <label for="user" class="col-sm-3 control-label">用户名</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control" id="user" name="username">
                    </div>
                </div>
                <div class="form-group">
                    <label for="pwd" class="col-sm-3 control-label">密码</label>
                    <div class="col-sm-9">
                        <input type="password" class="form-control" id="pwd" name="password">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-3 col-sm-9">
                        <button type="submit" class="btn btn-primary">登 录</button>
                        <span style="color: red">{{ error }}</span>
                    </div>
                </div>
            </form>
        </div>


    - settings.py 配置文件：
        - 保存权限信息：
            RBAC_SESSION_PERMISSION_KEY = 'asdfu3nrsluidfowljer'
        - 保存菜单信息：
            RBAC_SESSION_MENU_KEY = 'jJASHDIOywejhASD'


9. 应用中间件
    - 白名单处理
    - 免权限校验的URL
    - 权限校验


    settings.py
        # 中间件应用
        MIDDLEWARE = [
            ....
            'rbac.middleware.rbac.RbacMiddleware'
        ]

        # 白名单（无需登录/无需权限校验）
        RBAC_VALID_LIST = [
            '/api/login/',
            '/admin.*'
        ]

        # 免校验（需登录/无需权限校验）
        RBAC_NO_PERMISSION_LIST = [
            '/api/index/'
        ]

        # 父权限的名称（用于做菜单的默认展开）
        RBAC_CURRENT_PARENT_NAME = "dufs3sffdsdfsdf"
        # 导航条
        RBAC_RECORD_LIST = "ffsf3fsdfsdf"

10. 在 layout.html 中应用 动态菜单和导航条。

        {% get_menu request %}

        {% get_breadcrumb request %}

11. 粒度控制到按钮
        {% extends 'layout.html' %}
        {% load api %}
        {% load rbac %}

        {% block content %}
        <div style="margin: 5px;">
            <div>
                {% if request|has_permission:'interface_add' %}
                    <a href="{% memory_url request 'interface_add' %}" class="btn btn-primary">添加</a>
                {% endif %}
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>序号</th>
                        <th>接口名称</th>
                        <th>URL</th>
                        {% if request|has_permission:'interface_edit' or request|has_permission:'interface_delete' %}
                        <th>选项</th>
                        {% endif %}
                    </tr>
                </thead>
                <tbody>
                    {% for row in queryset %}
                        <tr>
                            <td>{{ forloop.counter }}</td>
                            <td>{{ row.title }}</td>
                            <td>{{ row.url }}</td>
                            {% if request|has_permission:'interface_edit' or request|has_permission:'interface_delete' %}
                            <td>
                                {% if request|has_permission:'interface_edit' %}
                                    <a href="{% memory_url request 'interface_edit' row.id %}">编辑</a>
                                {% endif %}
                                {% if request|has_permission:'interface_delete' %}
                                    <a href="{% memory_url request 'interface_delete' row.id %}">删除</a>
                                {% endif %}
                            </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                </tbody>

            </table>

            <ul class="pagination">
                  {{ pager.page_html|safe }}
              </ul>
        </div>

        {% endblock %}

